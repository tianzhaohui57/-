C51 COMPILER V9.60.0.0   ________                                                          07/09/2022 22:27:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ________
OBJECT MODULE PLACED IN .\Objects\实时时钟.obj
COMPILER INVOKED BY: C:\Keil_v5-ARM\C51\BIN\C51.EXE 实时时钟.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\实时时钟.lst) TABS(2) OBJECT(.\Objects\实时时钟.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          sbit sclk=P1^7;   //DS1302的Sclk时钟线位定义
   6          sbit io=P2^4;   //DS1302的i/o数据线位定义
   7          sbit ce=P1^6;   //DS1302的ce片选线位定义
   8          sbit dula=P2^6;    //数据码段选位定义
   9          sbit wela=P2^7;   //数据码位选位定义
  10          uchar code table_du[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,
  11                              0x39,0x5e,0x79,0x71};   //数据管段选编码
  12          uchar time_data[]={13,6,4,17,11,58,30};   //设置时间初值（年、周、月、日、时、分、秒）
  13          uchar write_add[]={0x8c,0x8a,0x88,0x86,
  14                          0x84,0x82,0x80};  //年、周、月、日、时、分、秒的寄存器写入地址 
  15          uchar read_add[]={0x8d,0x8b,0x89,0x87,
  16                          0x85,0x83,0x81};  //年、周、月、日、时、分、秒的寄存器读取地址
  17          uchar disp[6];
  18          
  19          delay(uchar x)   //延时函数
  20          {
  21   1        uchar a,b;
  22   1        for(a=x;a>0;a--)
  23   1          for(b=200;b>0;b--);
  24   1      }
  25          
  26          void write_ds1302_byte(uchar add)   //字节写操作函数
  27          {
  28   1        uchar i;
  29   1        for(i=0;i<8;i++)   //分8次循环，把（add）一位一位的写入
  30   1        {
  31   2          sclk=0; 
  32   2          io=add&0x01;   //add和0x01进行按位与，保留最低位。目的是：从低位开始写入
  33   2          add=add>>1;   //add右移一位
  34   2          sclk=1; 
  35   2        }
  36   1      }
  37          
  38          void write_ds1302(uchar add,uchar dat)  //单字节写操作函数（包含地址和数据）
  39          {
  40   1        ce=0;      //刚开始ce为低电平
  41   1        sclk=0;     //刚开始sclk为低平
  42   1        ce=1;      //ce变为高电平，允许单片机向DS1302中的寄存器写入地址命令和数据
  43   1        _nop_();   //稍微延时（一个机器周期）
  44   1        write_ds1302_byte(add);  //写入控制命令,（指明写入的寄存器地址及后续的操作为写操作）
  45   1        write_ds1302_byte(dat);  //写入一个字节数据
  46   1        ce=0;     //地址命令和数据写完之后，把ce拉低，防止对写入的数据进行误操作
  47   1        _nop_();  //稍微延时
  48   1        io=1;     //释放IO数据线
  49   1        sclk=1;   //释放sclk时钟线
  50   1      }
  51          
  52          uchar read_ds1302(uchar add)  //单字节读操作函数
  53          {
  54   1        uchar i,value;
C51 COMPILER V9.60.0.0   ________                                                          07/09/2022 22:27:19 PAGE 2   

  55   1        ce=0;     //刚开始ce为低电平
  56   1        sclk=0;    //刚开始sclk为低平
  57   1        ce=1;     //ce变为高电平，允许单片机向DS1302中的寄存器写入地址命令，并读出数据
  58   1        _nop_();  //稍微延时（一个机器周期）
  59   1        write_ds1302_byte(add); //写入控制命令,（指明要读取的寄存器地址及后续的操作为读操作）
  60   1        for(i=0;i<8;i++)   //分8次循环，把数据一位一位的读出
  61   1        {
  62   2          value=value>>1;   //value右移一位
  63   2            sclk=0;  //把sclk时钟置为低电平，开始读取数据
  64   2          if(io)
  65   2          {
  66   3            value=value|0x80;  //把I0读到的值，放到value 的最高位
  67   3          }
  68   2          sclk=1; 
  69   2        }
  70   1        ce=0;      //一个字节的数据读完之后，把ce拉低
  71   1        _nop_();
  72   1        sclk=0;     //释放sclk时钟线
  73   1        _nop_();
  74   1        sclk=1;
  75   1        io=1;      //释放io数据线
  76   1        return value;  //把 value值返回
  77   1      }
  78          
  79          void set_rtc()   //设置时间初值函数
  80          {
  81   1        uchar i,j,k;
  82   1        for(i=0;i<7;i++)  //把数组time_data[]中的7个十进制数转换成BCD码
  83   1        {
  84   2          j=time_data[i]/10;
  85   2          k=time_data[i]%10;
  86   2          time_data[i]=k+j*16;
  87   2        }
  88   1        write_ds1302(0x8e,0x00);  //在往寄存器写之前，要去除写保护（8e为写保护寄存器的地址）
  89   1        for(i=0;i<7;i++)   //分7次循环，向年、周、月、日、时、分、秒的寄存器写入时间数据
  90   1        {
  91   2          write_ds1302(write_add[i],time_data[i]);
  92   2        }
  93   1        write_ds1302(0x8e,0x80);  //加写保护
  94   1      }
  95          
  96          void read_rtc()   //读时间函数
  97          {
  98   1        uchar i;
  99   1        for(i=0;i<7;i++)   //分7次循环，向年、周、月、日、时、分、秒的寄存器读取时间数据
 100   1        {
 101   2          time_data[i]=read_ds1302(read_add[i]);
 102   2        }
 103   1      }
 104          
 105          void time_pros()  //时间处理函数（把要显示的时分秒BCD码转换成十进制数）
 106          {
 107   1        disp[0]=time_data[4]/16;   //时的十位数
 108   1        disp[1]=time_data[4]%16;  //时的个位数
 109   1        disp[2]=time_data[5]/16;   //分的十位数
 110   1        disp[3]=time_data[5]%16;  //分的个位数
 111   1        disp[4]=time_data[6]/16;   //秒的十位数
 112   1        disp[5]=time_data[6]%16;  //秒的个位数
 113   1      }
*** WARNING C290 IN LINE 24 OF 实时时钟.c: missing return value


C51 COMPILER V9.60.0.0   ________                                                          07/09/2022 22:27:19 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
